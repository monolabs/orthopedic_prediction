method="knn",data=train_set1,tuneLength=20)
predictions_knn<-predict(fit_knn,newdata=test_set1,type="raw")
results_knn<-results_func(predictions_knn,test_set1$class)
fit_knn$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn)
results2<-tibble(data="Data 1",model="knn",accuracy=results_knn[1],recall=results_knn[2],precision=results_knn[3],F1=results_knn[4])
results2
set.seed(4365,sample.kind="Rounding")
fit_knn2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn2<-predict(fit_knn2,newdata=test_set1,type="raw")
results_knn2<-results_func(predictions_knn2,test_set1$class)
fit_knn2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn2)
results3<-tibble(data="Data 2",model="knn",accuracy=results_knn2[1],recall=results_knn2[2],precision=results_knn2[3],F1=results_knn2[4])
results3
set.seed(3456,sample.kind="Rounding")
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=20)
predictions_rf<-predict(fit_rf,newdata=test_set1,type="raw")
results_rf<-results_func(predictions_rf,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf)
results4<-tibble(data="Data 1",model="rf",accuracy=results_rf[1],recall=results_rf[2],precision=results_rf[3],F1=results_rf[4])
results4
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=20)
predictions_rf<-predict(fit_rf$finalModel,newdata=test_set1,type="raw")
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("readr", repos = "http://cran.us.r-project.org")
if(!require(gridExtra)) install.packages("gridExtra", repos = "http://cran.us.r-project.org")
if(!require(corrplot)) install.packages("corrplot", repos = "http://cran.us.r-project.org")
if(!require(caret)) install.packages("caret", repos = "http://cran.us.r-project.org")
if(!require(Matrix)) install.packages("Matrix", repos = "http://cran.us.r-project.org")
col_names=c("pelvic_incidence","pelvic_tilt","lumbar_lordosis_angle","sacral_slope","pelvic_radius","degree_spondylolisthesis","class")
dat1<-read_csv("../data/column_2C_weka.csv")%>%setNames(col_names)%>%na.omit%>% mutate(class=factor(class,levels=unique(class)))
dat2<-read_csv("../data/column_3C_weka.csv")%>%setNames(col_names)%>%na.omit%>%mutate(class=factor(class,levels=unique(class)))
head(dat1)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1<-dat1%>%filter(degree_spondylolisthesis<400)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1%>%gather(type,value,-class)%>%
ggplot(aes(value))+
geom_histogram(binwidth=5)+
facet_grid(.~type)
cor1<-cor(dat1[1:(length(dat1)-1)])
cor1
corrplot(cor1)
cor_plot_1<-dat1%>%
ggplot(aes(sacral_slope,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,degree_spondylolisthesis))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
cor_plot_1<-dat1%>%
ggplot(aes(rank(sacral_slope),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(degree_spondylolisthesis)))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
set.seed(2346,sample.kind="Rounding")
test_index1<-createDataPartition(dat1$class,times=1,p=0.2)
test_set1<-dat1[unlist(test_index1),]
train_set1<-dat1[-unlist(test_index1),]
set.seed(2346,sample.kind="Rounding")
test_index2<-createDataPartition(dat2$class,times=1,p=0.2)
test_set2<-dat2[unlist(test_index2),]
train_set2<-dat2[-unlist(test_index2),]
train_set1%>%group_by(class)%>%summarize(n=n())
train_set2%>%group_by(class)%>%summarize(n=n())
results_func<-function(predictions,tests){ #predictions and tests are both vectors
cf<-confusionMatrix(data=predictions,reference=tests)
c(cf$overall['Accuracy'],cf$byClass['Sensitivity'],cf$byClass['Precision'],cf$byClass['F1'])
}
fit_glm<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1,family="binomial")
predictions_glm<-predict(fit_glm,newdata=test_set1,type="raw")
results_glm<-results_func(predictions_glm,test_set1$class)
predict(fit_glm,newdata=test_set1,type="prob")%>%arrange(desc(Abnormal))%>%head
fit_glm2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1%>%filter(degree_spondylolisthesis<=50),family="binomial")
predictions_glm2<-predict(fit_glm2,newdata=test_set1,type="raw")
results_glm2<-results_func(predictions_glm2,test_set1$class)
identical(predictions_glm,predictions_glm2)
results1<-tibble(data="Data 1",model="glm",accuracy=results_glm2[1],recall=results_glm2[2],precision=results_glm2[3],F1=results_glm2[4])
results1
set.seed(1234,sample.kind="Rounding")
fit_knn<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn<-predict(fit_knn,newdata=test_set1,type="raw")
results_knn<-results_func(predictions_knn,test_set1$class)
fit_knn$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn)
results2<-tibble(data="Data 1",model="knn",accuracy=results_knn[1],recall=results_knn[2],precision=results_knn[3],F1=results_knn[4])
results2
set.seed(4365,sample.kind="Rounding")
fit_knn2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn2<-predict(fit_knn2,newdata=test_set1,type="raw")
results_knn2<-results_func(predictions_knn2,test_set1$class)
fit_knn2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn2)
results3<-tibble(data="Data 2",model="knn",accuracy=results_knn2[1],recall=results_knn2[2],precision=results_knn2[3],F1=results_knn2[4])
results3
set.seed(3456,sample.kind="Rounding")
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=20)
predictions_rf<-predict(fit_rf,newdata=test_set1,type="raw")
results_rf<-results_func(predictions_rf,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf)
results4<-tibble(data="Data 1",model="rf",accuracy=results_rf[1],recall=results_rf[2],precision=results_rf[3],F1=results_rf[4])
results4
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("readr", repos = "http://cran.us.r-project.org")
if(!require(gridExtra)) install.packages("gridExtra", repos = "http://cran.us.r-project.org")
if(!require(corrplot)) install.packages("corrplot", repos = "http://cran.us.r-project.org")
if(!require(caret)) install.packages("caret", repos = "http://cran.us.r-project.org")
if(!require(Matrix)) install.packages("Matrix", repos = "http://cran.us.r-project.org")
col_names=c("pelvic_incidence","pelvic_tilt","lumbar_lordosis_angle","sacral_slope","pelvic_radius","degree_spondylolisthesis","class")
dat1<-read_csv("../data/column_2C_weka.csv")%>%setNames(col_names)%>%na.omit%>% mutate(class=factor(class,levels=unique(class)))
dat2<-read_csv("../data/column_3C_weka.csv")%>%setNames(col_names)%>%na.omit%>%mutate(class=factor(class,levels=unique(class)))
head(dat1)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1<-dat1%>%filter(degree_spondylolisthesis<400)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1%>%gather(type,value,-class)%>%
ggplot(aes(value))+
geom_histogram(binwidth=5)+
facet_grid(.~type)
cor1<-cor(dat1[1:(length(dat1)-1)])
cor1
corrplot(cor1)
cor_plot_1<-dat1%>%
ggplot(aes(sacral_slope,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,degree_spondylolisthesis))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
cor_plot_1<-dat1%>%
ggplot(aes(rank(sacral_slope),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(degree_spondylolisthesis)))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
set.seed(2346,sample.kind="Rounding")
test_index1<-createDataPartition(dat1$class,times=1,p=0.2)
test_set1<-dat1[unlist(test_index1),]
train_set1<-dat1[-unlist(test_index1),]
set.seed(2346,sample.kind="Rounding")
test_index2<-createDataPartition(dat2$class,times=1,p=0.2)
test_set2<-dat2[unlist(test_index2),]
train_set2<-dat2[-unlist(test_index2),]
train_set1%>%group_by(class)%>%summarize(n=n())
train_set2%>%group_by(class)%>%summarize(n=n())
results_func<-function(predictions,tests){ #predictions and tests are both vectors
cf<-confusionMatrix(data=predictions,reference=tests)
c(cf$overall['Accuracy'],cf$byClass['Sensitivity'],cf$byClass['Precision'],cf$byClass['F1'])
}
fit_glm<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1,family="binomial")
predictions_glm<-predict(fit_glm,newdata=test_set1,type="raw")
results_glm<-results_func(predictions_glm,test_set1$class)
predict(fit_glm,newdata=test_set1,type="prob")%>%arrange(desc(Abnormal))%>%head
fit_glm2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1%>%filter(degree_spondylolisthesis<=50),family="binomial")
predictions_glm2<-predict(fit_glm2,newdata=test_set1,type="raw")
results_glm2<-results_func(predictions_glm2,test_set1$class)
identical(predictions_glm,predictions_glm2)
results1<-tibble(data="Data 1",model="glm",accuracy=results_glm2[1],recall=results_glm2[2],precision=results_glm2[3],F1=results_glm2[4])
results1
set.seed(1234,sample.kind="Rounding")
fit_knn<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn<-predict(fit_knn,newdata=test_set1,type="raw")
results_knn<-results_func(predictions_knn,test_set1$class)
fit_knn$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn)
results2<-tibble(data="Data 1",model="knn",accuracy=results_knn[1],recall=results_knn[2],precision=results_knn[3],F1=results_knn[4])
results2
set.seed(4365,sample.kind="Rounding")
fit_knn2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn2<-predict(fit_knn2,newdata=test_set1,type="raw")
results_knn2<-results_func(predictions_knn2,test_set1$class)
fit_knn2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn2)
results3<-tibble(data="Data 2",model="knn",accuracy=results_knn2[1],recall=results_knn2[2],precision=results_knn2[3],F1=results_knn2[4])
results3
set.seed(3456,sample.kind="Rounding")
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=20)
predictions_rf<-predict(fit_rf,newdata=test_set1,type="raw")
results_rf<-results_func(predictions_rf,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf)
results4<-tibble(data="Data 1",model="rf",accuracy=results_rf[1],recall=results_rf[2],precision=results_rf[3],F1=results_rf[4])
results4
set.seed(3456,sample.kind="Rounding")
set.seed(3498,sample.kind="Rounding")
fit_rf2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5)
predictions_rf2<-predict(fit_rf2,newdata=test_set1,type="raw")
results_rf2<-results_func(predictions_rf2,test_set1$class)
fit_rf2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf2)
results5<-tibble(data="Data 2",model="rf",accuracy=results_rf2[1],recall=results_rf2[2],precision=results_rf2[3],F1=results_rf2[4])
results5
set.seed(3573,sample.kind="Rounding")
set.seed(3573,sample.kind="Rounding")
fit_knn_cv<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20,trControl=(trainControl(method="cv",number=10,p=0.9)))
predictions_knn_cv<-predict(fit_knn_cv,newdata=test_set1,type="raw")
results_knn_cv<-results_func(predictions_knn_cv,test_set1$class)
fit_knn_cv$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn_cv)
tab_knn_cv<-tibble(data="Data 1",model="knn_cv",accuracy=results_knn_cv[1],recall=results_knn_cv[2],precision=results_knn_cv[3],F1=results_knn_cv[4])
tab_knn_cv
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("readr", repos = "http://cran.us.r-project.org")
if(!require(gridExtra)) install.packages("gridExtra", repos = "http://cran.us.r-project.org")
if(!require(corrplot)) install.packages("corrplot", repos = "http://cran.us.r-project.org")
if(!require(caret)) install.packages("caret", repos = "http://cran.us.r-project.org")
if(!require(Matrix)) install.packages("Matrix", repos = "http://cran.us.r-project.org")
col_names=c("pelvic_incidence","pelvic_tilt","lumbar_lordosis_angle","sacral_slope","pelvic_radius","degree_spondylolisthesis","class")
dat1<-read_csv("../data/column_2C_weka.csv")%>%setNames(col_names)%>%na.omit%>% mutate(class=factor(class,levels=unique(class)))
dat2<-read_csv("../data/column_3C_weka.csv")%>%setNames(col_names)%>%na.omit%>%mutate(class=factor(class,levels=unique(class)))
head(dat1)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1<-dat1%>%filter(degree_spondylolisthesis<400)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1%>%gather(type,value,-class)%>%
ggplot(aes(value))+
geom_histogram(binwidth=5)+
facet_grid(.~type)
cor1<-cor(dat1[1:(length(dat1)-1)])
cor1
corrplot(cor1)
cor_plot_1<-dat1%>%
ggplot(aes(sacral_slope,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,degree_spondylolisthesis))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
cor_plot_1<-dat1%>%
ggplot(aes(rank(sacral_slope),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(degree_spondylolisthesis)))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
set.seed(2346,sample.kind="Rounding")
test_index1<-createDataPartition(dat1$class,times=1,p=0.2)
test_set1<-dat1[unlist(test_index1),]
train_set1<-dat1[-unlist(test_index1),]
set.seed(2346,sample.kind="Rounding")
test_index2<-createDataPartition(dat2$class,times=1,p=0.2)
test_set2<-dat2[unlist(test_index2),]
train_set2<-dat2[-unlist(test_index2),]
train_set1%>%group_by(class)%>%summarize(n=n())
train_set2%>%group_by(class)%>%summarize(n=n())
results_func<-function(predictions,tests){ #predictions and tests are both vectors
cf<-confusionMatrix(data=predictions,reference=tests)
c(cf$overall['Accuracy'],cf$byClass['Sensitivity'],cf$byClass['Precision'],cf$byClass['F1'])
}
fit_glm<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1,family="binomial")
predictions_glm<-predict(fit_glm,newdata=test_set1,type="raw")
results_glm<-results_func(predictions_glm,test_set1$class)
predict(fit_glm,newdata=test_set1,type="prob")%>%arrange(desc(Abnormal))%>%head
fit_glm2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1%>%filter(degree_spondylolisthesis<=50),family="binomial")
predictions_glm2<-predict(fit_glm2,newdata=test_set1,type="raw")
results_glm2<-results_func(predictions_glm2,test_set1$class)
identical(predictions_glm,predictions_glm2)
tab_glm<-tibble(data="Data 1",model="glm",accuracy=results_glm2[1],recall=results_glm2[2],precision=results_glm2[3],F1=results_glm2[4])
tab_glm
set.seed(1234,sample.kind="Rounding")
fit_knn<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn<-predict(fit_knn,newdata=test_set1,type="raw")
results_knn<-results_func(predictions_knn,test_set1$class)
fit_knn$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn)
tab_knn_boot1<-tibble(data="Data 1",model="knn_bootstrap",accuracy=results_knn[1],recall=results_knn[2],precision=results_knn[3],F1=results_knn[4])
tab_knn_boot1
set.seed(3573,sample.kind="Rounding")
fit_knn_cv1<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20,trControl=(trainControl(method="cv",number=10,p=0.9)))
predictions_knn_cv1<-predict(fit_knn_cv1,newdata=test_set1,type="raw")
results_knn_cv1<-results_func(predictions_knn_cv1,test_set1$class)
fit_knn_cv1$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn_cv1)
tab_knn_cv1<-tibble(data="Data 1",model="knn_cv",accuracy=results_knn_cv1[1],recall=results_knn_cv1[2],precision=results_knn_cv1[3],F1=results_knn_cv1[4])
tab_knn_cv1
set.seed(4365,sample.kind="Rounding")
fit_knn2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn2<-predict(fit_knn2,newdata=test_set1,type="raw")
results_knn2<-results_func(predictions_knn2,test_set1$class)
fit_knn2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn2)
tab_knn_boot2<-tibble(data="Data 2",model="knn_cv",accuracy=results_knn2[1],recall=results_knn2[2],precision=results_knn2[3],F1=results_knn2[4])
tab_knn_boot2
set.seed(4589,sample.kind="Rounding")
fit_knn_cv2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20,trControl=(trainControl(method="cv",number=10,p=0.9)))
predictions_knn_cv2<-predict(fit_knn_cv2,newdata=test_set1,type="raw")
results_knn_cv2<-results_func(predictions_knn_cv2,test_set1$class)
fit_knn_cv2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn_cv2)
tab_knn_cv2<-tibble(data="Data 2",model="knn_cv",accuracy=results_knn_cv2[1],recall=results_knn_cv2[2],precision=results_knn_cv2[3],F1=results_knn_cv2[4])
tab_knn_cv2
set.seed(3456,sample.kind="Rounding")
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5)
predictions_rf<-predict(fit_rf,newdata=test_set1,type="raw")
results_rf<-results_func(predictions_rf,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf)
results4<-tibble(data="Data 1",model="rf_bootstrap",accuracy=results_rf[1],recall=results_rf[2],precision=results_rf[3],F1=results_rf[4])
results4
set.seed(3498,sample.kind="Rounding")
fit_rf2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5)
predictions_rf2<-predict(fit_rf2,newdata=test_set1,type="raw")
results_rf2<-results_func(predictions_rf2,test_set1$class)
fit_rf2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf2)
results5<-tibble(data="Data 2",model="rf_bootstrap",accuracy=results_rf2[1],recall=results_rf2[2],precision=results_rf2[3],F1=results_rf2[4])
results5
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)) install.packages("tidyverse", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("readr", repos = "http://cran.us.r-project.org")
if(!require(gridExtra)) install.packages("gridExtra", repos = "http://cran.us.r-project.org")
if(!require(corrplot)) install.packages("corrplot", repos = "http://cran.us.r-project.org")
if(!require(caret)) install.packages("caret", repos = "http://cran.us.r-project.org")
if(!require(Matrix)) install.packages("Matrix", repos = "http://cran.us.r-project.org")
col_names=c("pelvic_incidence","pelvic_tilt","lumbar_lordosis_angle","sacral_slope","pelvic_radius","degree_spondylolisthesis","class")
dat1<-read_csv("../data/column_2C_weka.csv")%>%setNames(col_names)%>%na.omit%>% mutate(class=factor(class,levels=unique(class)))
dat2<-read_csv("../data/column_3C_weka.csv")%>%setNames(col_names)%>%na.omit%>%mutate(class=factor(class,levels=unique(class)))
head(dat1)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1<-dat1%>%filter(degree_spondylolisthesis<400)
dat1%>%gather(type,value,-class)%>%
ggplot(aes(type,value,color=class))+
geom_jitter(alpha=0.2)+
theme(axis.text.x=element_text(angle=45,hjust=1))
dat1%>%gather(type,value,-class)%>%
ggplot(aes(value))+
geom_histogram(binwidth=5)+
facet_grid(.~type)
cor1<-cor(dat1[1:(length(dat1)-1)])
cor1
corrplot(cor1)
cor_plot_1<-dat1%>%
ggplot(aes(sacral_slope,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,pelvic_incidence))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(lumbar_lordosis_angle,degree_spondylolisthesis))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
cor_plot_1<-dat1%>%
ggplot(aes(rank(sacral_slope),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_2<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(pelvic_incidence)))+
geom_point(alpha=0.4)
cor_plot_3<-dat1%>%
ggplot(aes(rank(lumbar_lordosis_angle),rank(degree_spondylolisthesis)))+
geom_point(alpha=0.4)
grid.arrange(cor_plot_1,cor_plot_2,cor_plot_3,nrow=1)
set.seed(2346,sample.kind="Rounding")
test_index1<-createDataPartition(dat1$class,times=1,p=0.2)
test_set1<-dat1[unlist(test_index1),]
train_set1<-dat1[-unlist(test_index1),]
set.seed(2346,sample.kind="Rounding")
test_index2<-createDataPartition(dat2$class,times=1,p=0.2)
test_set2<-dat2[unlist(test_index2),]
train_set2<-dat2[-unlist(test_index2),]
train_set1%>%group_by(class)%>%summarize(n=n())
train_set2%>%group_by(class)%>%summarize(n=n())
results_func<-function(predictions,tests){ #predictions and tests are both vectors
cf<-confusionMatrix(data=predictions,reference=tests)
c(cf$overall['Accuracy'],cf$byClass['Sensitivity'],cf$byClass['Precision'],cf$byClass['F1'])
}
fit_glm<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1,family="binomial")
predictions_glm<-predict(fit_glm,newdata=test_set1,type="raw")
results_glm<-results_func(predictions_glm,test_set1$class)
predict(fit_glm,newdata=test_set1,type="prob")%>%arrange(desc(Abnormal))%>%head
fit_glm2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="glm",data=train_set1%>%filter(degree_spondylolisthesis<=50),family="binomial")
predictions_glm2<-predict(fit_glm2,newdata=test_set1,type="raw")
results_glm2<-results_func(predictions_glm2,test_set1$class)
identical(predictions_glm,predictions_glm2)
tab_glm<-tibble(data="Data 1",model="glm",accuracy=results_glm2[1],recall=results_glm2[2],precision=results_glm2[3],F1=results_glm2[4])
tab_glm
set.seed(1234,sample.kind="Rounding")
fit_knn<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn<-predict(fit_knn,newdata=test_set1,type="raw")
results_knn<-results_func(predictions_knn,test_set1$class)
fit_knn$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn)
tab_knn_boot1<-tibble(data="Data 1",model="knn_bootstrap",accuracy=results_knn[1],recall=results_knn[2],precision=results_knn[3],F1=results_knn[4])
tab_knn_boot1
set.seed(3573,sample.kind="Rounding")
fit_knn_cv1<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20,trControl=(trainControl(method="cv",number=10)))
predictions_knn_cv1<-predict(fit_knn_cv1,newdata=test_set1,type="raw")
results_knn_cv1<-results_func(predictions_knn_cv1,test_set1$class)
fit_knn_cv1$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn_cv1)
tab_knn_cv1<-tibble(data="Data 1",model="knn_cv",accuracy=results_knn_cv1[1],recall=results_knn_cv1[2],precision=results_knn_cv1[3],F1=results_knn_cv1[4])
tab_knn_cv1
set.seed(4365,sample.kind="Rounding")
fit_knn2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20)
predictions_knn2<-predict(fit_knn2,newdata=test_set1,type="raw")
results_knn2<-results_func(predictions_knn2,test_set1$class)
fit_knn2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn2)
tab_knn_boot2<-tibble(data="Data 2",model="knn_cv",accuracy=results_knn2[1],recall=results_knn2[2],precision=results_knn2[3],F1=results_knn2[4])
tab_knn_boot2
set.seed(4589,sample.kind="Rounding")
fit_knn_cv2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="knn",data=train_set1,tuneLength=20,trControl=(trainControl(method="cv",number=10)))
predictions_knn_cv2<-predict(fit_knn_cv2,newdata=test_set1,type="raw")
results_knn_cv2<-results_func(predictions_knn_cv2,test_set1$class)
fit_knn_cv2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_knn_cv2)
tab_knn_cv2<-tibble(data="Data 2",model="knn_cv",accuracy=results_knn_cv2[1],recall=results_knn_cv2[2],precision=results_knn_cv2[3],F1=results_knn_cv2[4])
tab_knn_cv2
set.seed(3456,sample.kind="Rounding")
fit_rf<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5)
predictions_rf<-predict(fit_rf,newdata=test_set1,type="raw")
results_rf<-results_func(predictions_rf,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf)
tab_rf_boot1<-tibble(data="Data 1",model="rf_bootstrap",accuracy=results_rf[1],recall=results_rf[2],precision=results_rf[3],F1=results_rf[4])
tab_rf_boot1
set.seed(1296,sample.kind="Rounding")
fit_rf_cv1<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5,trControl=trainControl(method="cv",number=10))
predictions_rf_cv1<-predict(fit_rf_cv1,newdata=test_set1,type="raw")
results_rf_cv1<-results_func(predictions_rf_cv1,test_set1$class)
fit_rf$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf_cv1)
tab_rf_cv1<-tibble(data="Data 1",model="rf_cv",accuracy=results_rv_cv1[1],recall=results_rf_cv1[2],precision=results_rf_cv1[3],F1=results_rf_cv1[4])
tab_rf_cv2<-tibble(data="Data 2",model="rf_cv",accuracy=results_rf_cv2[1],recall=results_rf_cv2[2],precision=results_rf_cv2[3],F1=results_rf_cv2[4])
fit_rf_cv2<-train(class~degree_spondylolisthesis+pelvic_incidence+lumbar_lordosis_angle+sacral_slope+pelvic_radius+pelvic_tilt,
method="rf",data=train_set1,tuneLength=5,trControl=trainControl(method="cv",number=10))
predictions_rf_cv2<-predict(fit_rf_cv2,newdata=test_set1,type="raw")
results_rf_cv2<-results_func(predictions_rf_cv2,test_set1$class)
fit_rf_cv2$results%>%arrange(desc(Accuracy))%>%head
plot(fit_rf_cv2)
tab_rf_cv2<-tibble(data="Data 2",model="rf_cv",accuracy=results_rf_cv2[1],recall=results_rf_cv2[2],precision=results_rf_cv2[3],F1=results_rf_cv2[4])
tab_rf_cv2
tab_rf_cv1<-tibble(data="Data 1",model="rf_cv",accuracy=results_rf_cv1[1],recall=results_rf_cv1[2],precision=results_rf_cv1[3],F1=results_rf_cv1[4])
tab_rf_cv1
